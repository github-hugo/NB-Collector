10:19:31.189,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fb669c3: startup date [Tue Feb 06 10:19:31 CST 2018]; root of context hierarchy
10:19:31.895,HV000001: Hibernate Validator 5.3.6.Final
10:19:31.990,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:19:32.078,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ec3bfe0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:19:33.445,No active profile set, falling back to default profiles: default
10:19:33.487,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3eba57a7: startup date [Tue Feb 06 10:19:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fb669c3
10:19:35.742,Multiple Spring Data modules found, entering strict repository configuration mode!
10:19:35.860,Multiple Spring Data modules found, entering strict repository configuration mode!
10:19:35.921,Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.nhb.NBIot.dataaccess.dao.DeviceInfoDao.
10:19:35.922,Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.nhb.NBIot.dataaccess.dao.HistoryDataDao.
10:19:35.923,Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.nhb.NBIot.dataaccess.dao.RealtimeDataDao.
10:19:35.924,Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.nhb.NBIot.dataaccess.dao.TokenInfoDao.
10:19:36.476,BeanFactory id=e8fd48f3-3173-3a02-8620-5a377ce6d037
10:19:36.569,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:19:36.765,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$24ea14e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:19:36.804,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ec3bfe0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:19:37.890,Tomcat initialized with port(s): 9093 (http) 37000 (https)
10:19:37.910,Starting service [Tomcat]
10:19:37.913,Starting Servlet Engine: Apache Tomcat/8.5.27
10:19:38.446,At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
10:19:38.454,Initializing Spring embedded WebApplicationContext
10:19:38.454,Root WebApplicationContext: initialization completed in 4967 ms
10:19:38.970,Mapping servlet: 'dispatcherServlet' to [/]
10:19:38.980,Mapping filter: 'metricsFilter' to: [/*]
10:19:38.981,Mapping filter: 'characterEncodingFilter' to: [/*]
10:19:38.981,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10:19:38.981,Mapping filter: 'httpPutFormContentFilter' to: [/*]
10:19:38.982,Mapping filter: 'requestContextFilter' to: [/*]
10:19:38.982,Mapping filter: 'webRequestLoggingFilter' to: [/*]
10:19:38.982,Mapping filter: 'crosFilter' to: [/*]
10:19:38.982,Mapping filter: 'applicationContextIdFilter' to: [/*]
10:19:41.220,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
10:19:41.220,Adding discovered server 192.168.1.90:17000 to client view of cluster
10:19:41.489,Opened connection [connectionId{localValue:1, serverValue:769}] to 192.168.1.90:17000
10:19:41.503,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=11616124}
10:19:41.507,Discovered cluster type of STANDALONE
10:19:43.225,Mapped "{[/na/iocm/devNotify/v1.1.0/updateDeviceInfo],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.http.HttpStatus> com.nhb.NBIot.api.callback.MessageNotificationController.updateDeviceInfo(com.nhb.NBIot.dto.device.DeviceAddedDTO) throws java.lang.Exception
10:19:43.227,Mapped "{[/na/iocm/devNotify/v1.1.0/updateDeviceData],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.http.HttpStatus> com.nhb.NBIot.api.callback.MessageNotificationController.updateDeviceData(com.nhb.NBIot.dto.data.DeviceDataChangedDTO) throws java.lang.Exception
10:19:43.228,Mapped "{[/na/iocm/devNotify/v1.1.0/addDevice],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.http.HttpStatus> com.nhb.NBIot.api.callback.MessageNotificationController.addDevice(com.nhb.NBIot.dto.device.DeviceAddedDTO) throws java.lang.Exception
10:19:43.229,Mapped "{[/na/iocm/devNotify/v1.1.0/deletedDevice],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.http.HttpStatus> com.nhb.NBIot.api.callback.MessageNotificationController.deleteDevice(com.nhb.NBIot.dto.device.DeviceAddedDTO)
10:19:43.232,Mapped "{[/nhb/nbiot/data/collector/v1/deviceDataHistory],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DataCollectorController.deviceDataHistory(com.nhb.NBIot.request.data.DataHistoryRequest)
10:19:43.233,Mapped "{[/nhb/nbiot/data/collector/v1/queryDevice],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DataCollectorController.queryDevice(java.lang.String)
10:19:43.234,Mapped "{[/nhb/nbiot/data/collector/v1/queryDevices],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DataCollectorController.queryDevices(com.nhb.NBIot.request.data.QueryDevicesRequest)
10:19:43.234,Mapped "{[/nhb/nbiot/data/collector/v1/subscribe],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DataCollectorController.subscribe(java.lang.String)
10:19:43.236,Mapped "{[/nhb/nbiot/device/manage/v1/registerDirectlyConnectedDevice],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DeviceManageController.registerDirectlyConnectedDevice(com.nhb.NBIot.request.device.RegisterDeviceRequest)
10:19:43.236,Mapped "{[/nhb/nbiot/device/manage/v1/deleteDirectlyConnectedDevice],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DeviceManageController.deleteDirectlyConnectedDevice(com.nhb.NBIot.request.device.DeleteDeviceRequest)
10:19:43.237,Mapped "{[/nhb/nbiot/device/manage/v1/modifyDeviceInfo],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DeviceManageController.modifyDeviceInfo(com.nhb.NBIot.request.device.UpdateDeviceInfoRequest)
10:19:43.246,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
10:19:43.248,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
10:19:43.250,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
10:19:43.262,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10:19:43.264,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:19:45.338,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10:19:45.339,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10:19:45.340,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:19:45.342,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10:19:45.342,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:19:45.344,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:19:45.346,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:19:45.349,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10:19:45.350,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:19:45.351,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10:19:45.353,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:19:45.356,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:19:45.357,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:19:45.362,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10:19:45.363,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10:19:45.364,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10:19:45.366,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
10:19:45.367,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:19:45.368,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10:19:45.371,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10:19:45.373,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10:19:45.373,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10:19:45.374,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:19:45.375,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:19:45.376,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10:19:45.378,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10:19:45.379,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:19:45.825,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
10:19:46.334,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3eba57a7: startup date [Tue Feb 06 10:19:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fb669c3
10:19:46.573,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:19:46.574,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:19:46.686,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:19:47.581,No URLs will be polled as dynamic configuration sources.
10:19:47.581,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:19:47.628,No URLs will be polled as dynamic configuration sources.
10:19:47.628,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:19:48.145,Registering beans for JMX exposure on startup
10:19:48.161,Bean with name 'environmentManager' has been autodetected for JMX exposure
10:19:48.166,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10:19:48.167,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10:19:48.168,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
10:19:48.170,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10:19:48.171,Bean with name 'refreshScope' has been autodetected for JMX exposure
10:19:48.177,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10:19:48.204,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
10:19:48.228,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10:19:48.241,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10:19:48.260,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3eba57a7,type=ConfigurationPropertiesRebinder]
10:19:48.283,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10:19:48.285,Registering beans for JMX exposure on startup
10:19:48.571,Starting beans in phase 0
10:19:48.588,Setting initial instance status as: STARTING
10:19:48.680,Initializing Eureka in region us-east-1
10:19:48.852,Using JSON encoding codec LegacyJacksonJson
10:19:48.853,Using JSON decoding codec LegacyJacksonJson
10:19:49.048,Using XML encoding codec XStreamXml
10:19:49.048,Using XML decoding codec XStreamXml
10:19:49.516,Resolving eureka endpoints via configuration
10:19:49.968,Disable delta property : false
10:19:49.968,Single vip registry refresh property : null
10:19:49.968,Force full registry fetch : false
10:19:49.968,Application is null : false
10:19:49.968,Registered Applications size is zero : true
10:19:49.969,Application version is -1: true
10:19:49.969,Getting all instance registry info from the eureka server
10:19:50.262,The response status is 200
10:19:50.265,Starting heartbeat executor: renew interval is: 30
10:19:50.270,InstanceInfoReplicator onDemand update allowed rate per min is 4
10:19:50.275,Discovery Client initialized at timestamp 1517883590275 with initial instances count: 2
10:19:50.335,Registering application nbiot-app with eureka with status UP
10:19:50.348,Saw local status change event StatusChangeEvent [timestamp=1517883590348, current=UP, previous=STARTING]
10:19:50.357,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10:19:50.370,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10:19:50.392,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10:19:50.397,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10:19:50.409,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10:19:50.423,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10:19:50.429,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10:19:50.438,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10:19:50.455,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10:19:50.460,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10:19:50.465,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10:19:50.587,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10:19:50.591,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10:19:50.595,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10:19:50.597,Starting beans in phase 2147483647
10:19:50.597,Context refreshed
10:19:50.631,Opened connection [connectionId{localValue:2, serverValue:770}] to 192.168.1.90:17000
10:19:50.639,Found 1 custom documentation plugin(s)
10:19:50.664,DiscoveryClient_NBIOT-APP/xuyahui:nbiot-app:9093: registering service...
10:19:50.746,DiscoveryClient_NBIOT-APP/xuyahui:nbiot-app:9093 - registration status: 204
10:19:50.819,Scanning for api listing references
10:19:51.710,No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
10:19:51.733,Initializing ProtocolHandler ["http-nio-9093"]
10:19:51.751,Starting ProtocolHandler ["http-nio-9093"]
10:19:51.779,Using a shared selector for servlet write/read
10:19:51.823,Initializing ProtocolHandler ["https-jsse-nio-37000"]
10:19:51.956,Using a shared selector for servlet write/read
10:19:51.960,Starting ProtocolHandler ["https-jsse-nio-37000"]
10:19:52.032,Tomcat started on port(s): 9093 (http) 37000 (https)
10:19:52.034,Updating port to 9093
10:19:52.043,Started NBIoTApplication in 22.388 seconds (JVM running for 23.399)
10:25:09.264,Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@345f69f3: startup date [Tue Feb 06 10:25:09 CST 2018]; root of context hierarchy
10:25:09.825,HV000001: Hibernate Validator 5.3.6.Final
10:25:09.913,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:25:10.000,Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b47193bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:25:11.318,No active profile set, falling back to default profiles: default
10:25:11.359,Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@56bc3fac: startup date [Tue Feb 06 10:25:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@345f69f3
10:25:13.247,Multiple Spring Data modules found, entering strict repository configuration mode!
10:25:13.347,Multiple Spring Data modules found, entering strict repository configuration mode!
10:25:13.401,Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.nhb.NBIot.dataaccess.dao.DeviceInfoDao.
10:25:13.404,Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.nhb.NBIot.dataaccess.dao.HistoryDataDao.
10:25:13.405,Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.nhb.NBIot.dataaccess.dao.RealtimeDataDao.
10:25:13.406,Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.nhb.NBIot.dataaccess.dao.TokenInfoDao.
10:25:13.941,BeanFactory id=e8fd48f3-3173-3a02-8620-5a377ce6d037
10:25:13.980,JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:25:14.172,Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ca843700] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:25:14.218,Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b47193bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:25:15.472,Tomcat initialized with port(s): 9093 (http) 37000 (https)
10:25:15.501,Starting service [Tomcat]
10:25:15.503,Starting Servlet Engine: Apache Tomcat/8.5.27
10:25:16.579,At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
10:25:16.592,Initializing Spring embedded WebApplicationContext
10:25:16.593,Root WebApplicationContext: initialization completed in 5234 ms
10:25:17.309,Mapping servlet: 'dispatcherServlet' to [/]
10:25:17.319,Mapping filter: 'metricsFilter' to: [/*]
10:25:17.320,Mapping filter: 'characterEncodingFilter' to: [/*]
10:25:17.321,Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10:25:17.321,Mapping filter: 'httpPutFormContentFilter' to: [/*]
10:25:17.321,Mapping filter: 'requestContextFilter' to: [/*]
10:25:17.321,Mapping filter: 'webRequestLoggingFilter' to: [/*]
10:25:17.321,Mapping filter: 'crosFilter' to: [/*]
10:25:17.321,Mapping filter: 'applicationContextIdFilter' to: [/*]
10:25:19.085,Cluster created with settings {hosts=[192.168.1.90:17000], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
10:25:19.085,Adding discovered server 192.168.1.90:17000 to client view of cluster
10:25:19.265,Opened connection [connectionId{localValue:1, serverValue:771}] to 192.168.1.90:17000
10:25:19.270,Monitor thread successfully connected to server with description ServerDescription{address=192.168.1.90:17000, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 6]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=3034215}
10:25:19.272,Discovered cluster type of STANDALONE
10:25:20.914,Mapped "{[/na/iocm/devNotify/v1.1.0/updateDeviceInfo],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.http.HttpStatus> com.nhb.NBIot.api.callback.MessageNotificationController.updateDeviceInfo(com.nhb.NBIot.dto.device.DeviceAddedDTO) throws java.lang.Exception
10:25:20.916,Mapped "{[/na/iocm/devNotify/v1.1.0/updateDeviceData],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.http.HttpStatus> com.nhb.NBIot.api.callback.MessageNotificationController.updateDeviceData(com.nhb.NBIot.dto.data.DeviceDataChangedDTO) throws java.lang.Exception
10:25:20.917,Mapped "{[/na/iocm/devNotify/v1.1.0/deletedDevice],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.http.HttpStatus> com.nhb.NBIot.api.callback.MessageNotificationController.deleteDevice(com.nhb.NBIot.dto.device.DeviceAddedDTO)
10:25:20.918,Mapped "{[/na/iocm/devNotify/v1.1.0/addDevice],methods=[POST],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.http.HttpStatus> com.nhb.NBIot.api.callback.MessageNotificationController.addDevice(com.nhb.NBIot.dto.device.DeviceAddedDTO) throws java.lang.Exception
10:25:20.923,Mapped "{[/nhb/nbiot/data/collector/v1/subscribe],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DataCollectorController.subscribe(java.lang.String)
10:25:20.923,Mapped "{[/nhb/nbiot/data/collector/v1/deviceDataHistory],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DataCollectorController.deviceDataHistory(com.nhb.NBIot.request.data.DataHistoryRequest)
10:25:20.924,Mapped "{[/nhb/nbiot/data/collector/v1/queryDevice],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DataCollectorController.queryDevice(java.lang.String)
10:25:20.924,Mapped "{[/nhb/nbiot/data/collector/v1/queryDevices],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DataCollectorController.queryDevices(com.nhb.NBIot.request.data.QueryDevicesRequest)
10:25:20.926,Mapped "{[/nhb/nbiot/device/manage/v1/deleteDirectlyConnectedDevice],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DeviceManageController.deleteDirectlyConnectedDevice(com.nhb.NBIot.request.device.DeleteDeviceRequest)
10:25:20.926,Mapped "{[/nhb/nbiot/device/manage/v1/registerDirectlyConnectedDevice],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DeviceManageController.registerDirectlyConnectedDevice(com.nhb.NBIot.request.device.RegisterDeviceRequest)
10:25:20.927,Mapped "{[/nhb/nbiot/device/manage/v1/modifyDeviceInfo],methods=[POST]}" onto public com.nhb.utils.nhb_utils.common.RestResultDto com.nhb.NBIot.api.DeviceManageController.modifyDeviceInfo(com.nhb.NBIot.request.device.UpdateDeviceInfoRequest)
10:25:20.933,Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
10:25:20.936,Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
10:25:20.938,Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
10:25:20.950,Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10:25:20.951,Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:25:23.288,Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10:25:23.291,Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10:25:23.293,Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:25:23.295,Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10:25:23.296,Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:25:23.297,Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10:25:23.298,Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:25:23.298,Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10:25:23.299,Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
10:25:23.300,Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10:25:23.302,Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10:25:23.303,Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:25:23.304,Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:25:23.306,Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:25:23.307,Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10:25:23.307,Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10:25:23.309,Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:25:23.310,Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10:25:23.311,Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10:25:23.313,Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:25:23.317,Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10:25:23.318,Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10:25:23.319,Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:25:23.320,Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:25:23.321,Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10:25:23.323,Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:25:23.324,Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:25:23.725,Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
10:25:24.262,Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@56bc3fac: startup date [Tue Feb 06 10:25:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@345f69f3
10:25:24.377,Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:25:24.377,Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:25:24.460,Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:25:25.461,No URLs will be polled as dynamic configuration sources.
10:25:25.462,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:25:25.473,No URLs will be polled as dynamic configuration sources.
10:25:25.474,To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:25:25.943,Registering beans for JMX exposure on startup
10:25:25.960,Bean with name 'environmentManager' has been autodetected for JMX exposure
10:25:25.966,Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10:25:25.968,Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10:25:25.969,Bean with name 'restartEndpoint' has been autodetected for JMX exposure
10:25:25.971,Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10:25:25.973,Bean with name 'refreshScope' has been autodetected for JMX exposure
10:25:25.978,Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10:25:26.005,Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
10:25:26.028,Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10:25:26.039,Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10:25:26.064,Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=56bc3fac,type=ConfigurationPropertiesRebinder]
10:25:26.073,Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10:25:26.074,Registering beans for JMX exposure on startup
10:25:26.396,Starting beans in phase 0
10:25:26.408,Setting initial instance status as: STARTING
10:25:26.478,Initializing Eureka in region us-east-1
10:25:26.649,Using JSON encoding codec LegacyJacksonJson
10:25:26.650,Using JSON decoding codec LegacyJacksonJson
10:25:27.044,Using XML encoding codec XStreamXml
10:25:27.046,Using XML decoding codec XStreamXml
10:25:27.489,Resolving eureka endpoints via configuration
10:25:27.889,Disable delta property : false
10:25:27.889,Single vip registry refresh property : null
10:25:27.889,Force full registry fetch : false
10:25:27.889,Application is null : false
10:25:27.889,Registered Applications size is zero : true
10:25:27.889,Application version is -1: true
10:25:27.889,Getting all instance registry info from the eureka server
10:25:28.271,The response status is 200
10:25:28.274,Starting heartbeat executor: renew interval is: 30
10:25:28.278,InstanceInfoReplicator onDemand update allowed rate per min is 4
10:25:28.294,Discovery Client initialized at timestamp 1517883928294 with initial instances count: 2
10:25:28.360,Registering application nbiot-app with eureka with status UP
10:25:28.362,Saw local status change event StatusChangeEvent [timestamp=1517883928362, current=UP, previous=STARTING]
10:25:28.369,Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10:25:28.381,Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10:25:28.397,Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10:25:28.402,Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10:25:28.407,Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10:25:28.412,Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10:25:28.418,Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10:25:28.423,Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10:25:28.435,Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10:25:28.440,Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10:25:28.445,Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10:25:28.449,Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10:25:28.455,Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10:25:28.459,Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10:25:28.462,Starting beans in phase 2147483647
10:25:28.462,Context refreshed
10:25:28.513,Found 1 custom documentation plugin(s)
10:25:28.563,Opened connection [connectionId{localValue:2, serverValue:772}] to 192.168.1.90:17000
10:25:28.608,DiscoveryClient_NBIOT-APP/xuyahui:nbiot-app:9093: registering service...
10:25:28.678,DiscoveryClient_NBIOT-APP/xuyahui:nbiot-app:9093 - registration status: 204
10:25:28.693,Scanning for api listing references
10:25:29.626,No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
10:25:29.652,Initializing ProtocolHandler ["http-nio-9093"]
10:25:29.668,Starting ProtocolHandler ["http-nio-9093"]
10:25:29.692,Using a shared selector for servlet write/read
10:25:29.744,Initializing ProtocolHandler ["https-jsse-nio-37000"]
10:25:29.927,Using a shared selector for servlet write/read
10:25:29.932,Starting ProtocolHandler ["https-jsse-nio-37000"]
10:25:30.053,Tomcat started on port(s): 9093 (http) 37000 (https)
10:25:30.055,Updating port to 9093
10:25:30.063,Started NBIoTApplication in 22.219 seconds (JVM running for 22.964)
10:30:27.898,Resolving eureka endpoints via configuration
10:35:27.905,Resolving eureka endpoints via configuration
10:38:28.759,Initializing Spring FrameworkServlet 'dispatcherServlet'
10:38:28.759,FrameworkServlet 'dispatcherServlet': initialization started
10:38:28.817,FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
10:40:27.913,Resolving eureka endpoints via configuration
10:45:27.920,Resolving eureka endpoints via configuration
10:50:27.927,Resolving eureka endpoints via configuration
10:55:27.934,Resolving eureka endpoints via configuration
11:00:27.941,Resolving eureka endpoints via configuration
11:05:27.948,Resolving eureka endpoints via configuration
11:10:27.960,Resolving eureka endpoints via configuration
11:15:27.973,Resolving eureka endpoints via configuration
11:20:27.987,Resolving eureka endpoints via configuration
11:25:27.999,Resolving eureka endpoints via configuration
11:30:28.011,Resolving eureka endpoints via configuration
11:35:28.023,Resolving eureka endpoints via configuration
11:40:28.030,Resolving eureka endpoints via configuration
11:45:28.044,Resolving eureka endpoints via configuration
11:50:28.051,Resolving eureka endpoints via configuration
11:55:28.063,Resolving eureka endpoints via configuration
12:00:28.070,Resolving eureka endpoints via configuration
12:05:28.077,Resolving eureka endpoints via configuration
12:10:28.084,Resolving eureka endpoints via configuration
12:15:28.092,Resolving eureka endpoints via configuration
12:20:28.100,Resolving eureka endpoints via configuration
12:25:28.107,Resolving eureka endpoints via configuration
12:30:28.114,Resolving eureka endpoints via configuration
12:35:28.126,Resolving eureka endpoints via configuration
12:40:28.133,Resolving eureka endpoints via configuration
12:45:28.141,Resolving eureka endpoints via configuration
12:50:28.153,Resolving eureka endpoints via configuration
12:55:28.160,Resolving eureka endpoints via configuration
13:00:28.167,Resolving eureka endpoints via configuration
13:05:28.174,Resolving eureka endpoints via configuration
13:10:28.181,Resolving eureka endpoints via configuration
13:15:28.188,Resolving eureka endpoints via configuration
13:20:28.191,Resolving eureka endpoints via configuration
13:25:28.199,Resolving eureka endpoints via configuration
13:30:28.208,Resolving eureka endpoints via configuration
13:35:28.222,Resolving eureka endpoints via configuration
13:40:28.229,Resolving eureka endpoints via configuration
13:45:28.236,Resolving eureka endpoints via configuration
13:50:28.243,Resolving eureka endpoints via configuration
13:55:28.258,Resolving eureka endpoints via configuration
14:00:28.265,Resolving eureka endpoints via configuration
14:05:28.273,Resolving eureka endpoints via configuration
14:10:28.280,Resolving eureka endpoints via configuration
14:15:28.287,Resolving eureka endpoints via configuration
14:20:28.294,Resolving eureka endpoints via configuration
